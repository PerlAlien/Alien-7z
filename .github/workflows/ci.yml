name: Run Tests

on:
  push:
    branches:
      - '*'
  pull_request:

env:
  PKG_NAME: 7-Zip
  PKG_UBUNTU: 7zip
  PKG_HOMEBREW: sevenzip
  PKG_MSYS2_MINGW64: '' # ~
  PKG_MSYS2_MINGW64_DEPS:  >-
    base-devel
    unzip
    mingw-w64-x86_64-toolchain
    mingw-w64-x86_64-perl
    mingw-w64-x86_64-cmake
  PKG_CHOCOLATEY: 7zip

jobs:
  dist:
    name: Make distribution using Dist::Zilla
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache ~/perl5
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-dist-locallib
          path: ~/perl5
      - name: Perl version
        run: |
          perl -v
      - name: Install cpanm
        run: |
          curl -L https://cpanmin.us | perl - --sudo App::cpanminus
      - name: Install local::lib
        run: |
          cpanm --local-lib=~/perl5 local::lib && eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
      - name: Install Dist::Zilla
        shell: bash
        run: |
          eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
          cpanm -n Dist::Zilla
          dzil authordeps --missing | cpanm -n
      - name: Make distribution
        shell: bash
        run: |
          eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
          dzil build --in build-dir
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./build-dir
  test:
    needs: dist
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        # bash on macos and linux
        # powershell on windows + strawberry perl
        # msys2 {0} on windows + msys2
        shell: >-
          ${{   fromJSON( '["", "bash {0}"]'       )[ startsWith(matrix.os, 'ubuntu-' ) || startsWith(matrix.os, 'macos-') ]
          }}${{ fromJSON( '["", "powershell {0}"]' )[ startsWith(matrix.os, 'windows-') && matrix.dist == 'strawberry'     ]
          }}${{ fromJSON( '["", "msys2 {0}"]'      )[ startsWith(matrix.os, 'windows-') && matrix.dist == 'msys2'          ] }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        perl-version: ['5.8', '5.20', '5.30', '5.34']
        alien-install-type:
          ## NOTE Current Ubuntu does not have 7zip package.
          ## Waiting for GitHub Actions to use 'jammy' distribution or backport
          ## the package.
          ## <https://packages.ubuntu.com/jammy/7zip>
          #- 'system'
          - 'share'
        alien-7zip-share-prefer: [ 'auto' ] # auto is the default for $ALIEN_7ZIP_SHARE_PREFER
        include:
          # Linux                  | (share, toggle share-prefer)
          - { perl-version: '5.34' , os: ubuntu-latest  ,                    alien-install-type: 'share'  , alien-7zip-share-prefer: 'binary' }
          - { perl-version: '5.34' , os: ubuntu-latest  ,                    alien-install-type: 'share'  , alien-7zip-share-prefer: 'source' }
          # Windows strawberry     | system, (share, toggle share-prefer)
          - { perl-version: '5.34' , os: windows-latest , dist: strawberry , alien-install-type: 'system'                                     }
          - { perl-version: '5.34' , os: windows-latest , dist: strawberry , alien-install-type: 'share'  , alien-7zip-share-prefer: 'auto'   }
          - { perl-version: '5.34' , os: windows-latest , dist: strawberry , alien-install-type: 'share'  , alien-7zip-share-prefer: 'binary' }
          #- { perl-version: '5.34' , os: windows-latest , dist: strawberry , alien-install-type: 'share'  , alien-7zip-share-prefer: 'source' }
          # Windows msys2          | (share, toggle share-prefer)
          - { perl-version: '5.34' , os: windows-latest , dist: msys2      , alien-install-type: 'share'  , alien-7zip-share-prefer: 'auto'   }
          - { perl-version: '5.34' , os: windows-latest , dist: msys2      , alien-install-type: 'share'  , alien-7zip-share-prefer: 'binary' }
          #- { perl-version: '5.34' , os: windows-latest , dist: msys2      , alien-install-type: 'share'  , alien-7zip-share-prefer: 'source' }
          # macOS                  | system, share
          - { perl-version: '5.34' , os: macos-11       ,                    alien-install-type: 'system'                                     }
          - { perl-version: '5.34' , os: macos-11       ,                    alien-install-type: 'share'  , alien-7zip-share-prefer: 'auto'   }
          - { perl-version: '5.34' , os: macos-11       ,                    alien-install-type: 'share'  , alien-7zip-share-prefer: 'binary' }
          - { perl-version: '5.34' , os: macos-11       ,                    alien-install-type: 'share'  , alien-7zip-share-prefer: 'source' }
    name: Perl ${{ matrix.perl-version }} on ${{ matrix.os }} with install-type ${{ matrix.alien-install-type }}, dist ${{ matrix.dist }}, share-prefer ${{ matrix.alien-7zip-share-prefer || 'auto' }}

    steps:
      - name: Get dist artifact
        uses: actions/download-artifact@v2
        with:
          name: dist

      # Setup system package
      - name: Setup system ${{ env.PKG_NAME }} (apt)
        if: runner.os == 'Linux' && matrix.alien-install-type == 'system'
        run: |
          sudo apt-get -y update && sudo apt-get install -y ${{ env.PKG_UBUNTU }}
      - name: Setup system ${{ env.PKG_NAME }} (homebrew)
        if: runner.os == 'macOS' && matrix.alien-install-type == 'system'
        run: |
          brew install ${{ env.PKG_HOMEBREW }}
      - name: Set up MSYS2
        uses: msys2/setup-msys2@v2
        if: runner.os == 'Windows' && matrix.dist == 'msys2'
        with:
          update: true
          install: ${{ env.PKG_MSYS2_MINGW64_DEPS }}
      - name: Set up ${{ env.PKG_NAME }} (MSYS2/MinGW pacman)
        if: runner.os == 'Windows' && matrix.dist == 'msys2' && matrix.alien-install-type == 'system'
        shell: msys2 {0}
        run: |
          # No MSYS2 package for 7-Zip (not p7zip)
          exit 1
          pacman -S --needed --noconfirm ${{ env.PKG_MSYS2_MINGW64 }}
      - name: Set up ${{ env.PKG_NAME }} (Chocolatey)
        if: runner.os == 'Windows' && matrix.dist == 'strawberry' && matrix.alien-install-type == 'system'
        run: |
          choco install ${{ env.PKG_CHOCOLATEY }}

      # Setup Perl
      - name: Set up perl
        uses: shogo82148/actions-setup-perl@v1
        if: matrix.os != 'windows-latest'
        with:
          perl-version: ${{ matrix.perl-version }}
      - name: Set up perl (Strawberry)
        uses: shogo82148/actions-setup-perl@v1
        if: matrix.os == 'windows-latest' && matrix.dist == 'strawberry'
        with:
          distribution: 'strawberry'

      - run: perl -V
      - name: Install cpanm
        if: runner.os == 'Windows' && matrix.dist == 'msys2'
        run:
          yes | cpan -T App::cpanminus || true

      - name: Install Perl deps
        run: |
          cpanm --notest --installdeps .

      - name: Set ALIEN_INSTALL_TYPE
        shell: bash
        run: |
          echo "ALIEN_INSTALL_TYPE=${{ matrix.alien-install-type }}" >> $GITHUB_ENV

      - name: Set ALIEN_7ZIP_SHARE_PREFER
        if: matrix.alien-7zip-share-prefer
        shell: bash
        run: |
          echo "ALIEN_7ZIP_SHARE_PREFER=${{ matrix.alien-7zip-share-prefer }}" >> $GITHUB_ENV

      - name: Run tests
        run: |
          cpanm --verbose --test-only .
